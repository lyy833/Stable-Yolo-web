# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple 控制模型的深度（BottleneckCSP个数）
width_multiple: 0.50  # layer channel multiple 控制Conv通道channel个数（卷积核数量）
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  # from表示当前模块的输入来自那一层的输出，-1表示来自上一层的输出
  # number表示当前模块的理论重复次数，实际的重复次数还要由上面的参数depth_multiple共同决定，决定网络模型的深度
  # moudule表示模块类名，通过这个类名去common.py中寻找相应的类，进行模块化的搭建网络。
  # argsargs: 是一个list，模块搭建所需参数，channel，kernel_size，stride，padding，bias等。会在网络搭建过程中根据不同层进行改变
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOv5 v6.0 head 作者没有区分neck模块，所以head部分包含了PANet+Detect部分
head:
  [[-1, 1, Conv, [512, 1, 1]], # 10    [512, 256, 1, 1]
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 11 [None, 2, 'nearest']
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4 [1]
   [-1, 3, C3, [512, False]],  # 13    [512, 256, 1, False]

   [-1, 1, Conv, [256, 1, 1]],   # 14      [256, 128, 1, 1]
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], #15  [None, 2, 'nearest']
   [[-1, 4], 1, Concat, [1]],  # 16     cat backbone P3   [1]
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)    [256, 128, 1, False]

   [-1, 1, Conv, [256, 3, 2]],  # 18     [128, 128, 3, 2]
   [[-1, 14], 1, Concat, [1]],  # 19    cat head P4   [1]
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)    [256, 256, 1, False] 

   [-1, 1, Conv, [512, 3, 2]],  # 21        [256, 256, 3, 2]
   [[-1, 10], 1, Concat, [1]],  # cat head P5     [1]
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)      [512, 512, 1, False]

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # 24    Detect(P3, P4, P5)
  ]


